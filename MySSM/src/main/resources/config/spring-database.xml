<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:component-scan base-package="my.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--指定数据库配置的地方-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/config/jdbc.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>
    <!--使用阿里巴巴Duid的连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="dbType" value="${ssm.dbType}"></property>
        <property name="url" value="${ssm.jdbc.url}" />
        <property name="driverClassName" value="${ssm.jdbc.driver}"></property>
        <property name="username" value="${ssm.jdbc.username}" />
        <property name="password" value="${ssm.jdbc.password}" />
        <property name="initialSize" value="1" />
        <property name="maxActive" value="20" />
        <property name="minIdle" value="10" />
        <property name="maxWait" value="60000" />
        <!--<property name="poolPreparedStatements" value="false"></property>
        <property name="maxOpenPreparedStatements" value="20"></property> -->
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
        <!-- 配置监控统计拦截的filters,配置log4j可以打印出Parameters -->
        <property name="filters" value="log4j" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定数据源的节点名称-->
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:/mapper/*.xml"></property>
        <!-- 拦截sql 语句 -->
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.gisquest.gyjg.interceptor.MybatitsInterceptor"></bean>-->
            <!--</array>-->
        <!--</property>-->
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <property name="basePackage" value="my.ssm.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--<bean id="SpringContextUtil" class="com.gisquest.gyjg.common.SpringContextUtil" />-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>